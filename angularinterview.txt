
                                          Angular  

What is Angular Framework?
Angular is a TypeScript-based open-source front-end platform that makes it easy to build web, mobile and desktop applications.
include declarative templates, dependency injection, end to end tooling which ease application development.

1.What is Data Binding in Angular?
There are four types of data binding in Angular:

Interpolation: Binding expressions are evaluated and displayed in the HTML template.
Property Binding: Binds a property of an HTML element to a value in the component.
Event Binding: Binds an event from an HTML element to a method in the component.
Two-Way Binding: Combines property binding and event binding to enable updates in both directions.

Interpolation: Binding values directly into the HTML using double curly braces {{ value }}.
Property Binding: Binding a component property to an HTML element property using square brackets [property]="value".
Event Binding: Binding an event from the HTML element to a component's method using parentheses (event)="method()".
Two-way Binding: A combination of property and event binding, allowing the automatic 
synchronization of data between the component and the input element using [(ngModel)].


2. Explain the lifecycle hooks in Angular.

In Angular, every component has a lifecycle. Angular creates and renders these components and also destroys them before removing them from the DOM. This is achieved with the help of lifecycle hooks. Here is the list of them -  

ngOnChanges() - Responds when Angular sets/resets data-bound input properties. 
ngOnInit() - Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties 
ngDoCheck() - Detect and act upon changes that Angular cannot or will not detect on its own. 
ngAfterContentInit() - Responds after Angular projects external content into the component's view. 
ngAfterContentChecked() - Respond after Angular checks the content projected into the component. 
ngAfterViewInit() - Respond after Angular initializes the component's views and child views. 
ngAfterViewChecked() - This hook responds after Angular checks the component's views and child views. 
ngOnDestroy() - This hook helps clean up just before Angular destroys the directive/component.

3. What is Dependency Injection in Angular?

Dependency Injection (DI) is a design pattern used in Angular to provide components with the services or dependencies they need. 
Instead of creating instances of dependencies within components,
Angular's DI mechanism automatically injects instances of required services into components' constructors.


4. How does Routing work in Angular?

Angular's built-in router enables navigation between different views and components in a single-page application. 
It allows you to define routes, associate components with routes, and handle navigation through URLs.

5. What is Angular Interceptor and how is it used?

Angular Interceptors are classes that can intercept HTTP requests and responses. 
They are used to perform tasks such as adding headers, logging, error handling, 
and modifying requests or responses before they reach the application. 
Interceptors are configured in the HttpClientModule.

6. What are Angular Guards?

Angular Guards are used to control navigation and access to routes in an Angular application. 
They can be used to prevent unauthorized access to certain routes 
(Route Guards) or to perform checks before navigating to a route 
(CanActivate, CanDeactivate, CanLoad, CanActivateChild)

7. What is a pipe in Angular?

Pipes are simple functions to use in template expressions to accept an input value and return a transformed value. 
Pipes are useful because you can use them throughout your application, while only declaring each pipe once.
Use pipes to transform strings, currency amounts, dates, and other data for display. 

Pure pipe =>
A pure pipe is only called when Angular detects a change in the value or the parameters passed to a pipe.
Impure pipe =>
An impure pipe is called for every change detection cycle.

Impure pipe =>
An impure pipe is called for every change detection cycle no matter whether the value or parameter(s) changes.
An impure pipe is called every time Angular checks for changes, even if the value or parameters
haven't changed.

8. Decorators are design patterns or functions that define how Angular features work. They make prior modifications to a class, service, or filter.

Angular supports four types of decorators:- 

Class decorators =>
These decorators are applied to classes.  @Component and @NgModule

Property decorators =>
These decorators are applied to properties. @Input, @Output, @HostBinding, @HostListener

Method decorators =>
@HostListener (This decorator is used for methods inside a class like a click, mouse hover, etc.)

Parameter decorators =>
These decorators are applied to parameters of a class. @Inject, @Optional, @
@Inject (This decorator is used inside class constructor)



9. What are template in Angular ?

There are two ways to create a template in an Angular component:

inline template , Linked template

inline template :-
The component decorator's template config is used to specify an inline HTML template for a component. 
The Template will be wrapped inside the single or double quotes

        <h1> Hello {{name}} how are you ? </h1>
        <h2> Welcome to interviewbit ! </h2>

Linked template :-
component may include an HTML template in a separate HTML file.
As illustrated below, the templateUrl option is used to indicate the path of the HTML template file.

10 What is Eager and Lazy loading?

Loading:   The eager loading technique is the default module-loading strategy.
Eager loading feature modules are loaded before the program begins.
This is primarily utilized for small-scale applications.

Lazy Loading: Lazy loading loads the feature modules dynamically as needed. 
This speeds up the application. It is utilized for larger projects where all of the modules are not required at the start


11 . What is ngOnInit ?

ngOnInit is a lifecycle hook and callback function used by Angular to mark the creation of a component. 
It accepts no arguments and returns a void type.


12 . What are Annotations in Angular?
Annotations in Angular are used for creating an annotation array. 
They are the metadata set on the class that is used to reflect the Metadata library.


13. What is AOT in Angular?
JIT (just in time) compilation
AOT(Ahead-of-Time) compilation

In Angular, AOT stands for Ahead-Of-Time compiler. It is used to convert your Angular HTML and TypeScript code into efficient JavaScript code during the build phase before the browser downloads and runs that code. 
By compiling the application during the build process provides a faster rendering in the browser.

14. What is Angular Router?
Angular Router is a mechanism that facilitates users to navigate from one view to the next as users perform application tasks. 
It follows the concept model of browser's application navigation.

15 .  Ways to load feature module ?

 1. Eager Loading (default mechanism) : All the modules loaded first then 
 application get started .

 2. Lazy Loading : First Application get started then modules will be loaded
 whenever they are needed.

 3. Pre Loading : First Application get started then modules will be loaded a 
 automatically

 16. What are Services in Angular? 
Angular Services perform tasks that are used by multiple components. 
These tasks could be data and image fetching, network connections, and database management among others. 
They perform all the operational tasks for the components and avoid rewriting of code. A service can be written once and injected into all the components that use that service.

17 . 11. What are directives in Angular?

They are essentially functions that execute when the Angular compiler finds them in the DOM. 
The Angular directives are segregated into 3 parts:

Component Directives : 
Structural Directives :- ngFor, ngIf, ngSwitch
Attribute Directives :- ngClass, ngStyle. ngDisabled, ngReadonly

18 . 14. How does one share data between components in Angular?

Data Sharing Between Angular Components
Parent to Child: via Input
Child to Parent: via Output() and EventEmitter
Child to Parent: via ViewChild
Unrelated Components: via a Service

19 . What is bootstrapping in Angular?

Automatic Bootstrapping: this is done by adding the ng-app directive to the root of the application, 
typically on the tag or tag if you want angular to bootstrap your application automatically

Manual Bootstrapping: Manual bootstrapping provides
you more control on how and when to initialize your Angular application

20 . how to angular space.ts file skip command 
  = --skip-tests ,
  ng g s Hotel --skip-tests

  
21. What is the interceptor concept in Angular?
Interceptor is a special Angular Service that can be used to intercept all the request and response calls and modify them to our requirement

interceptor are a part of the Angular system. they transform and inspect request from the application to the server.

22. What is the main.ts file in Angular and used for ?

main.ts file is the Entry point of your application , compiles the application with just-in-time and bootstraps the application. 
angular can be bootstrapped in multiple environments we need to import a module specific to the environment. 

23. What is the Auth guard in angular?
AuthGuard is an angular route guard used to protect the routes from unauthenticated/unauthorized people.
It is implemented using the canActivate interface which implements a canActivate function that checks whether the current user has permission to activate the requested route.

24. What is a service?
A service is used when a common functionality needs to be provided to various modules. 
Services allow for greater separation of concerns for your application and better modularity by allowing you to extract common functionality out of components.

25. What is an observable?
An Observable is a unique Object similar to a Promise that can help manage async code.
Observables are not part of the JavaScript language so we need to rely on a popular Observable library called RxJS. The observables are created using new keyword.

26. What is an observer?
Observer is an interface for a consumer of push-based notifications delivered by an Observable. It has below structure,

27.What is the purpose of Angular services?
Answer: Angular services are singleton objects that provide a way to centralize and share code and data across components in an Angular application. 
They encapsulate business logic, data manipulation, and communication with external services.


28. What is the difference between ngOnInit and constructor?
Constructor is used to initialize the class. 
It doesn't have any connection with HTML DOM elements. 

ngOnInit() used to write business logic. Using ngOnInit(), we can perform actions with the HTML DOM elements.

29. What are components?
Components are the most basic UI building block of an Angular app, which form a tree of Angular components. 
These components are a subset of directives.

30. What is difference between Observable and promise?

Observable can emit multiple values. A promise can emit only a single value at a time. 
Observables are lazy when we subscribe then only that will execute. 

Promises are not lazy; they will execute immediately on creation.


31. How can you share data between components in Angular?
Answer:

Input/Output: Parent components can pass data to child components using inputs, 
and child components can emit events to communicate with parents.
Services: Shared services can be used to store and manage shared data, acting as a communication channel between components.

32. How does Angular handle forms, and what are template-driven forms and reactive forms?
Answer:
Template-driven forms: Uses Angular directives in the template to build the form model. It's suitable for simple forms.
Reactive forms: Uses a form model built in the component class, providing more control and flexibility. It's suitable for complex forms and dynamic form scenarios.

33. What is s custome pipe ?

A pipe is a class decorated with pipe metadata @Pipe decorator, which you import from the core Angular library For example,
    @Pipe({name: 'myCustomPipe'})


34. What is a Service ?

A service is used when a common functionality needs to be provided to various modules. 
Services allow for greater separation of concerns for your application and better modularity by allowing you to extract common functionality out of components.

35.  Constructor and ngOnInit  which is called first ?

The constructor is called before the component is initialized, while ngOnInit is a lifecycle hook that iscalled
after the component is initialized

36.How do you handle form validation in Angular?

Template-driven forms: Use built-in validators like required, minlength, etc.
Reactive forms: Use Validators to create custom validators and apply them to form controls.

What is an interceptors and how to implement it ?
=> Interceptor can process the request and response of an HTTP request. 

What is NgRx ?

=> NgRx is State management library For Angular based on Redux. It uses Actions, Reducers, and Selectors .

Explain Dependency Injection ?

=> Dependency  Injection (DI) allows Angular  to provide instances of Services  and other dependencies.

Difference between FormBuilder and FormGroup?

=> FormBuilder simplifies the creation of forms. 
FormGroup represents a group of controls.
`FormGroup` allows precise form control management, 
whereas `FormBuilder` streamlines complex form creation, 
improving code efficiency and readability.
